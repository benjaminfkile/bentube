{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/Decoder/Decoder.js\";\nimport React, { Component } from 'react';\n\nclass Decoder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // serverURL: 'https://frozen-thicket-30265.herokuapp.com/downloadmp3?url=',\n      serverURL: 'http://localhost:8000/downloadmp3?url=',\n      videoId: this.props.videoId\n    };\n  }\n\n  render() {\n    var jsmediatags = require(\"jsmediatags\");\n\n    new jsmediatags.Reader(\"http://www.example.com/music-file.mp3\").setTagsToRead([\"title\", \"artist\"]).read({\n      onSuccess: function (tag) {\n        console.log(tag);\n      },\n      onError: function (error) {\n        console.log(':(', error.type, error.info);\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Media_Player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, this.props.videoId && /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"myAudio\",\n      src: this.state.serverURL + this.props.videoId,\n      controls: true,\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 32\n      }\n    }));\n  }\n\n}\n\nexport default Decoder;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/Decoder/Decoder.js"],"names":["React","Component","Decoder","constructor","props","state","serverURL","videoId","render","jsmediatags","require","Reader","setTagsToRead","read","onSuccess","tag","console","log","onError","error","type","info"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,SAAS,EAAE,wCAFA;AAGXC,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG;AAHT,KAAb;AAKD;;AAIDC,EAAAA,MAAM,GAAG;AAGP,QAAIC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEA,QAAID,WAAW,CAACE,MAAhB,CAAuB,uCAAvB,EACGC,aADH,CACiB,CAAC,OAAD,EAAU,QAAV,CADjB,EAEGC,IAFH,CAEQ;AACJC,MAAAA,SAAS,EAAE,UAASC,GAAT,EAAc;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAHG;AAIJG,MAAAA,OAAO,EAAE,UAASC,KAAT,EAAgB;AACvBH,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBE,KAAK,CAACC,IAAxB,EAA8BD,KAAK,CAACE,IAApC;AACD;AANG,KAFR;AAYA,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,KAAL,CAAWG,OAAX,iBAAsB;AAAO,MAAA,EAAE,EAAC,SAAV;AAAoB,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,SAAX,GAAuB,KAAKF,KAAL,CAAWG,OAA3D;AAAoE,MAAA,QAAQ,MAA5E;AAA6E,MAAA,QAAQ,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzB,CADF;AAKD;;AAnC6B;;AAsChC,eAAeL,OAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Decoder extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // serverURL: 'https://frozen-thicket-30265.herokuapp.com/downloadmp3?url=',\n      serverURL: 'http://localhost:8000/downloadmp3?url=',\n      videoId: this.props.videoId,\n    }\n  }\n\n\n\n  render() {\n\n\n    var jsmediatags = require(\"jsmediatags\");\n\n    new jsmediatags.Reader(\"http://www.example.com/music-file.mp3\")\n      .setTagsToRead([\"title\", \"artist\"])\n      .read({\n        onSuccess: function(tag) {\n          console.log(tag);\n        },\n        onError: function(error) {\n          console.log(':(', error.type, error.info);\n        }\n      });\n    \n\n    return (\n      <div className=\"Media_Player\">\n        {this.props.videoId && <audio id=\"myAudio\" src={this.state.serverURL + this.props.videoId} controls autoPlay />}\n      </div>\n    );\n  }\n}\n\nexport default Decoder;"]},"metadata":{},"sourceType":"module"}