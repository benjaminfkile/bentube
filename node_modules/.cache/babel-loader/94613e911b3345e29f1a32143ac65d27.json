{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/Search/Search.js\";\nimport React, { Component } from 'react';\nimport MediaPlayer from '../MediaPlayer/Media-Player';\nimport Results from './Results/Results';\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      apiKey: 'AIzaSyCyDGjcu0UgCCIWV1ZRB2Tv-i3M9i1iaa0',\n      searchURL: 'https://www.googleapis.com/youtube/v3/search',\n      baseURL: 'https://www.youtube.com/watch?v=',\n      videoId: 'tOPyNJig74w',\n      response: null\n    };\n  }\n\n  componentDidMount() {// this.getYouTubeVideos('spm')\n  }\n\n  formatQueryParams(params) {\n    const queryItems = Object.keys(params).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`);\n    return queryItems.join('&');\n  }\n\n  getYouTubeVideos(query, maxResults = 50) {\n    const params = {\n      key: this.state.apiKey,\n      q: query,\n      part: 'snippet',\n      maxResults\n    };\n    const queryString = this.formatQueryParams(params);\n    const url = this.state.searchURL + '?' + queryString;\n    fetch(url).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(responseJson => this.setState({\n      response: responseJson\n    })).catch(err => {\n      console.log(err.message);\n    });\n  }\n\n  render() {\n    if (this.state.response) {\n      for (let i = 0; i < this.state.response.items.length; i++) {\n        console.log(this.state.response.items[i].snippet.title);\n        console.log(this.state.response.items[i].id.videoId);\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MediaPlayer, {\n      watchLink: this.state.baseURL + this.state.videoId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/Search/Search.js"],"names":["React","Component","MediaPlayer","Results","Search","constructor","state","apiKey","searchURL","baseURL","videoId","response","componentDidMount","formatQueryParams","params","queryItems","Object","keys","map","key","encodeURIComponent","join","getYouTubeVideos","query","maxResults","q","part","queryString","url","fetch","then","ok","json","Error","statusText","responseJson","setState","catch","err","console","log","message","render","i","items","length","snippet","title","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAGA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC3BI,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,yCADC;AAETC,MAAAA,SAAS,EAAE,8CAFF;AAGTC,MAAAA,OAAO,EAAE,kCAHA;AAITC,MAAAA,OAAO,EAAE,aAJA;AAKTC,MAAAA,QAAQ,EAAE;AALD,KAAb;AAOH;;AAGHC,EAAAA,iBAAiB,GAAG,CAClB;AACD;;AAGDC,EAAAA,iBAAiB,CAACC,MAAD,EAAS;AACxB,UAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAChBI,GADgB,CACZC,GAAG,IAAK,GAAEC,kBAAkB,CAACD,GAAD,CAAM,IAAGC,kBAAkB,CAACN,MAAM,CAACK,GAAD,CAAP,CAAc,EADzD,CAAnB;AAEA,WAAOJ,UAAU,CAACM,IAAX,CAAgB,GAAhB,CAAP;AACD;;AAGDC,EAAAA,gBAAgB,CAACC,KAAD,EAAQC,UAAU,GAAC,EAAnB,EAAuB;AACrC,UAAMV,MAAM,GAAG;AACbK,MAAAA,GAAG,EAAE,KAAKb,KAAL,CAAWC,MADH;AAEbkB,MAAAA,CAAC,EAAEF,KAFU;AAGbG,MAAAA,IAAI,EAAE,SAHO;AAIbF,MAAAA;AAJa,KAAf;AAMA,UAAMG,WAAW,GAAG,KAAKd,iBAAL,CAAuBC,MAAvB,CAApB;AACA,UAAMc,GAAG,GAAG,KAAKtB,KAAL,CAAWE,SAAX,GAAuB,GAAvB,GAA6BmB,WAAzC;AAEAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQnB,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACoB,EAAb,EAAiB;AACf,eAAOpB,QAAQ,CAACqB,IAAT,EAAP;AACD;;AACD,YAAM,IAAIC,KAAJ,CAAUtB,QAAQ,CAACuB,UAAnB,CAAN;AACD,KANH,EAOGJ,IAPH,CAOQK,YAAY,IAAI,KAAKC,QAAL,CAAc;AAACzB,MAAAA,QAAQ,EAAEwB;AAAX,KAAd,CAPxB,EAQGE,KARH,CAQSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD,KAVH;AAWD;;AAECC,EAAAA,MAAM,GAAG;AAIL,QAAG,KAAKpC,KAAL,CAAWK,QAAd,EAAuB;AACnB,WAAI,IAAIgC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKrC,KAAL,CAAWK,QAAX,CAAoBiC,KAApB,CAA0BC,MAA7C,EAAqDF,CAAC,EAAtD,EAAyD;AACrDJ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlC,KAAL,CAAWK,QAAX,CAAoBiC,KAApB,CAA0BD,CAA1B,EAA6BG,OAA7B,CAAqCC,KAAjD;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlC,KAAL,CAAWK,QAAX,CAAoBiC,KAApB,CAA0BD,CAA1B,EAA6BK,EAA7B,CAAgCtC,OAA5C;AAEH;AACJ;;AAKD,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AACA,MAAA,SAAS,EAAI,KAAKJ,KAAL,CAAWG,OAAX,GAAqB,KAAKH,KAAL,CAAWI,OAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAOH;;AAtE0B;;AA0E/B,eAAeN,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport MediaPlayer from '../MediaPlayer/Media-Player'\nimport Results from './Results/Results'\n\n\nclass Search extends Component {\n    constructor() {\n        super();\n        this.state = {\n            apiKey: 'AIzaSyCyDGjcu0UgCCIWV1ZRB2Tv-i3M9i1iaa0',\n            searchURL: 'https://www.googleapis.com/youtube/v3/search',\n            baseURL: 'https://www.youtube.com/watch?v=',\n            videoId: 'tOPyNJig74w',\n            response: null\n        }\n    }\n\n\n  componentDidMount() {\n    // this.getYouTubeVideos('spm')\n  }\n\n  \n  formatQueryParams(params) {\n    const queryItems = Object.keys(params)\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n    return queryItems.join('&');\n  }\n  \n  \n  getYouTubeVideos(query, maxResults=50) {\n    const params = {\n      key: this.state.apiKey,\n      q: query,\n      part: 'snippet',\n      maxResults\n    };\n    const queryString = this.formatQueryParams(params)\n    const url = this.state.searchURL + '?' + queryString;\n  \n    fetch(url)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then(responseJson => this.setState({response: responseJson}))\n      .catch(err => {\n        console.log(err.message)\n      });\n  }\n\n    render() {\n\n\n\n        if(this.state.response){\n            for(let i = 0; i < this.state.response.items.length; i++){\n                console.log(this.state.response.items[i].snippet.title)\n                console.log(this.state.response.items[i].id.videoId)\n\n            }\n        }\n\n        \n\n\n        return (\n            <div className=\"Search\">\n                <MediaPlayer\n                watchLink = {this.state.baseURL + this.state.videoId}\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}