{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/MediaPlayer/MediaPlayer.js\";\nimport React, { Component } from 'react';\nimport Decoder from '../Decoder/Decoder';\nimport '../MediaPlayer/MediaPlayer.css';\n\nclass MediaPlayer extends Component {\n  constructor() {\n    super();\n\n    this.playTrack = args => {\n      // this.setState({ nowPlaying: args.id })\n      // console.log(this.state.idx + ': ' + this.state.queu[this.state.idx].title)\n      if (this.state.idx < this.state.queu.length) {}\n\n      this.setState({\n        idx: args.idx\n      });\n      console.log(this.state.idx);\n    };\n\n    this.pause = () => {\n      this.setState({\n        nowPlaying: null\n      });\n    };\n\n    this.next = args => {// if (this.state.idx < this.state.queu.length) {\n      //     this.setState({ idx: this.state.idx + 1 })\n      //     this.playTrack()\n      // }else{\n      //     this.setState({idx: 0})\n      // }\n    };\n\n    this.previous = () => {// if(this.state.idx > 0){\n      // this.setState({ idx: this.state.idx -1 })\n      // this.playTrack()\n      // }else{\n      //     this.setState({idx: this.state.queu.length - 1})\n      // }\n    };\n\n    this.listen4DB = () => {\n      if (this.props.response) {\n        this.setState({\n          waiting4DB: false\n        });\n        this.stopListening4DB();\n      }\n    };\n\n    this.stopListening4DB = () => {\n      clearInterval(this.state.interval1);\n      this.buildQueu();\n    };\n\n    this.buildQueu = () => {\n      let temp = [];\n      let idx = -1;\n\n      if (this.props.response) {\n        for (let i = 0; i < this.props.response.items.length; i++) {\n          if (this.props.response.items[i].id.videoId) {\n            idx++;\n            temp.push({\n              title: this.props.response.items[i].snippet.title,\n              description: this.props.response.items[i].snippet.description,\n              thumbnails: this.props.response.items[i].snippet.thumbnails,\n              id: this.props.response.items[i].id.videoId,\n              idx: idx\n            });\n          }\n        }\n\n        this.setState({\n          queu: temp\n        });\n      }\n    };\n\n    this.state = {\n      nowPlaying: null,\n      queu: null,\n      waiting4DB: true,\n      interval1: '',\n      idx: 0,\n      pause: false,\n      trackDuration: '',\n      timer: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      interval1: setInterval(this.listen4DB, 1000)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Result_List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, this.state.queu && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.playTrack(this.state.queu[this.state.idx - 1]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, \"<\"), !this.state.nowPlaying && /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.playTrack(this.state.queu[this.state.idx]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 56\n      }\n    }, \"play\"), this.state.nowPlaying && /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.pause(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 55\n      }\n    }, \"pause\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.playTrack(this.state.queu[this.state.idx + 1]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, \">\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, this.state.queu && this.state.queu.map(videos => /*#__PURE__*/React.createElement(\"li\", {\n      key: Math.random() * Math.random(),\n      onClick: () => this.playTrack(videos),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, videos.title))))), /*#__PURE__*/React.createElement(Decoder, {\n      videoId: this.state.nowPlaying,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default MediaPlayer;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/MediaPlayer/MediaPlayer.js"],"names":["React","Component","Decoder","MediaPlayer","constructor","playTrack","args","state","idx","queu","length","setState","console","log","pause","nowPlaying","next","previous","listen4DB","props","response","waiting4DB","stopListening4DB","clearInterval","interval1","buildQueu","temp","i","items","id","videoId","push","title","snippet","description","thumbnails","trackDuration","timer","componentDidMount","setInterval","render","map","videos","Math","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Decoder from '../Decoder/Decoder';\nimport '../MediaPlayer/MediaPlayer.css'\n\nclass MediaPlayer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            nowPlaying: null,\n            queu: null,\n            waiting4DB: true,\n            interval1: '',\n            idx: 0,\n            pause: false,\n            trackDuration: '',\n            timer: 0\n\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ interval1: setInterval(this.listen4DB, 1000) })\n    }\n\n    playTrack = (args) => {\n        // this.setState({ nowPlaying: args.id })\n        // console.log(this.state.idx + ': ' + this.state.queu[this.state.idx].title)\n        if(this.state.idx < this.state.queu.length){\n\n        }\n        this.setState({idx: args.idx})\n        console.log(this.state.idx)\n\n    }\n\n    pause = () => {\n        this.setState({ nowPlaying: null })\n    }\n\n    next = (args) => {\n        // if (this.state.idx < this.state.queu.length) {\n        //     this.setState({ idx: this.state.idx + 1 })\n        //     this.playTrack()\n        // }else{\n        //     this.setState({idx: 0})\n        // }\n\n    }\n\n    previous = () => {\n        // if(this.state.idx > 0){\n        // this.setState({ idx: this.state.idx -1 })\n        // this.playTrack()\n        // }else{\n        //     this.setState({idx: this.state.queu.length - 1})\n        // }\n    }\n\n    listen4DB = () => {\n        if (this.props.response) {\n            this.setState({ waiting4DB: false })\n            this.stopListening4DB()\n        }\n    }\n\n    stopListening4DB = () => {\n        clearInterval(this.state.interval1);\n        this.buildQueu()\n    }\n\n\n    buildQueu = () => {\n        let temp = []\n        let idx = -1;\n        if (this.props.response) {\n            for (let i = 0; i < this.props.response.items.length; i++) {\n                if (this.props.response.items[i].id.videoId) {\n                    idx ++\n                    temp.push(\n                        {\n                            title: this.props.response.items[i].snippet.title,\n                            description: this.props.response.items[i].snippet.description,\n                            thumbnails: this.props.response.items[i].snippet.thumbnails,\n                            id: this.props.response.items[i].id.videoId,\n                            idx: idx\n                        })\n                }\n            }\n            this.setState({ queu: temp })\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"Results\">\n\n                <div className=\"Result_List\">\n                    {this.state.queu && <div className=\"Controls\">\n                        {/* <section>\n                            <h1>\n                                {this.state.queu[this.state.idx].title}\n                            </h1>\n                            <br>\n                            </br>\n                            <p>\n                                {this.state.queu[this.state.idx].description}\n                            </p>\n                        </section> */}\n                        <br>\n                        </br>\n                        <ul>\n                            <li onClick={() => this.playTrack(this.state.queu[this.state.idx - 1])}>\n                                &lt;\n                            </li>\n                            {!this.state.nowPlaying && <li onClick={() => this.playTrack(this.state.queu[this.state.idx])}>\n                                play\n                            </li>}\n                            {this.state.nowPlaying && <li onClick={() => this.pause()}>\n                                pause\n                            </li>}\n                            <li onClick={() => this.playTrack(this.state.queu[this.state.idx +1])}>\n                                &gt;\n                            </li>\n                        </ul>\n                    </div>}\n                    <br></br>\n                    <div className=\"List\">\n                        <ul>\n                            {this.state.queu && this.state.queu.map(videos =>\n                                <li key={Math.random() * Math.random()} onClick={() => this.playTrack(videos)}>{videos.title}\n                                </li>)}\n                        </ul>\n                    </div>\n                </div>\n                <Decoder\n                    videoId={this.state.nowPlaying}\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default MediaPlayer"]},"metadata":{},"sourceType":"module"}