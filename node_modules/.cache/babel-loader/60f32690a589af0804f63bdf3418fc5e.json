{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Search from './Search/Search';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      apiKey: 'AIzaSyCyDGjcu0UgCCIWV1ZRB2Tv-i3M9i1iaa0',\n      searchURL: 'https://www.googleapis.com/youtube/v3/search'\n    };\n  }\n\n  componentDidMount() {\n    this.getYouTubeVideos('dog');\n  }\n\n  formatQueryParams(params) {\n    const queryItems = Object.keys(params).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`);\n    return queryItems.join('&');\n  }\n\n  getYouTubeVideos(query, maxResults = 10) {\n    const params = {\n      key: this.state.apiKey,\n      q: query,\n      part: 'snippet',\n      maxResults\n    };\n    const queryString = formatQueryParams(params);\n    const url = searchURL + '?' + queryString;\n    fetch(url).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(response.statusText);\n    }).then(responseJson => console.log(JSON.stringify(responseJson))).catch(err => {\n      $('#js-error-message').text(`Something went wrong: ${err.message}`);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/App.js"],"names":["React","Component","Search","App","constructor","state","apiKey","searchURL","componentDidMount","getYouTubeVideos","formatQueryParams","params","queryItems","Object","keys","map","key","encodeURIComponent","join","query","maxResults","q","part","queryString","url","fetch","then","response","ok","json","Error","statusText","responseJson","console","log","JSON","stringify","catch","err","$","text","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAE1BG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,yCADG;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,gBAAL,CAAsB,KAAtB;AACD;;AAGDC,EAAAA,iBAAiB,CAACC,MAAD,EAAS;AACxB,UAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAChBI,GADgB,CACZC,GAAG,IAAK,GAAEC,kBAAkB,CAACD,GAAD,CAAM,IAAGC,kBAAkB,CAACN,MAAM,CAACK,GAAD,CAAP,CAAc,EADzD,CAAnB;AAEA,WAAOJ,UAAU,CAACM,IAAX,CAAgB,GAAhB,CAAP;AACD;;AAGDT,EAAAA,gBAAgB,CAACU,KAAD,EAAQC,UAAU,GAAC,EAAnB,EAAuB;AACrC,UAAMT,MAAM,GAAG;AACbK,MAAAA,GAAG,EAAE,KAAKX,KAAL,CAAWC,MADH;AAEbe,MAAAA,CAAC,EAAEF,KAFU;AAGbG,MAAAA,IAAI,EAAE,SAHO;AAIbF,MAAAA;AAJa,KAAf;AAMA,UAAMG,WAAW,GAAGb,iBAAiB,CAACC,MAAD,CAArC;AACA,UAAMa,GAAG,GAAGjB,SAAS,GAAG,GAAZ,GAAkBgB,WAA9B;AAEAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,YAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AACD,KANH,EAOGL,IAPH,CAOQM,YAAY,IAAIC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAAZ,CAPxB,EAQGK,KARH,CAQSC,GAAG,IAAI;AACZC,MAAAA,CAAC,CAAC,mBAAD,CAAD,CAAuBC,IAAvB,CAA6B,yBAAwBF,GAAG,CAACG,OAAQ,EAAjE;AACD,KAVH;AAWD;;AAGHC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AArD2B;;AAwD5B,eAAevC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Search from './Search/Search'\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      apiKey: 'AIzaSyCyDGjcu0UgCCIWV1ZRB2Tv-i3M9i1iaa0',\n      searchURL: 'https://www.googleapis.com/youtube/v3/search'\n    }\n  }\n\n  componentDidMount() {\n    this.getYouTubeVideos('dog')\n  }\n\n  \n  formatQueryParams(params) {\n    const queryItems = Object.keys(params)\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n    return queryItems.join('&');\n  }\n  \n  \n  getYouTubeVideos(query, maxResults=10) {\n    const params = {\n      key: this.state.apiKey,\n      q: query,\n      part: 'snippet',\n      maxResults\n    };\n    const queryString = formatQueryParams(params)\n    const url = searchURL + '?' + queryString;\n  \n    fetch(url)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(response.statusText);\n      })\n      .then(responseJson => console.log(JSON.stringify(responseJson)))\n      .catch(err => {\n        $('#js-error-message').text(`Something went wrong: ${err.message}`);\n      });\n  }\n\n\nrender() {\n\n  return (\n    <div className=\"App\">\n      <Search />\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}