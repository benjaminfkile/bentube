{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/Decoder/Decoder.js\";\nimport React, { Component } from 'react';\n\nclass Decoder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.duration = () => {\n      var audio = document.getElementById(\"audio-1\");\n\n      if (audio.readyState > 0) {\n        var minutes = parseInt(audio.duration / 60, 10);\n        var seconds = parseInt(audio.duration % 60);\n        alert(minutes + \":\" + seconds);\n      }\n    };\n\n    this.state = {\n      // serverURL: 'https://frozen-thicket-30265.herokuapp.com/downloadmp3?url=',\n      serverURL: 'http://localhost:8000/downloadmp3?url='\n    };\n  }\n\n  componentWillUpdate() {\n    this.duration();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Media_Player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, this.props.videoId && /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"audio-1\",\n      src: this.state.serverURL + this.props.videoId,\n      controls: true,\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }\n    }));\n  }\n\n}\n\nexport default Decoder;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/Decoder/Decoder.js"],"names":["React","Component","Decoder","constructor","props","duration","audio","document","getElementById","readyState","minutes","parseInt","seconds","alert","state","serverURL","componentWillUpdate","render","videoId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,QAZmB,GAYT,MAAK;AAEb,UAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAZ;;AACA,UAAGF,KAAK,CAACG,UAAN,GAAmB,CAAtB,EACA;AACI,YAAIC,OAAO,GAAGC,QAAQ,CAACL,KAAK,CAACD,QAAN,GAAiB,EAAlB,EAAsB,EAAtB,CAAtB;AACA,YAAIO,OAAO,GAAGD,QAAQ,CAACL,KAAK,CAACD,QAAN,GAAiB,EAAlB,CAAtB;AAEAQ,QAAAA,KAAK,CAACH,OAAO,GAAC,GAAR,GAAYE,OAAb,CAAL;AACH;AACJ,KAtBoB;;AAEjB,SAAKE,KAAL,GAAa;AACX;AACAC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAEDC,EAAAA,mBAAmB,GAAE;AACnB,SAAKX,QAAL;AACD;;AAcDY,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,KAAL,CAAWc,OAAX,iBAAsB;AAAO,MAAA,EAAE,EAAC,SAAV;AAAoB,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWC,SAAX,GAAuB,KAAKX,KAAL,CAAWc,OAA3D;AAAoE,MAAA,QAAQ,MAA5E;AAA6E,MAAA,QAAQ,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzB,CADF;AAKD;;AAjC6B;;AAoChC,eAAehB,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Decoder extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // serverURL: 'https://frozen-thicket-30265.herokuapp.com/downloadmp3?url=',\n      serverURL: 'http://localhost:8000/downloadmp3?url=',\n    }\n  }\n\n  componentWillUpdate(){\n    this.duration()\n  }\n\n  duration =() =>{\n    \n    var audio = document.getElementById(\"audio-1\");\n    if(audio.readyState > 0) \n    {\n        var minutes = parseInt(audio.duration / 60, 10);\n        var seconds = parseInt(audio.duration % 60);\n        \n        alert(minutes+\":\"+seconds);\n    }\n}\n\n  render() {\n\n    return (\n      <div className=\"Media_Player\">\n        {this.props.videoId && <audio id=\"audio-1\" src={this.state.serverURL + this.props.videoId} controls autoPlay />}\n      </div>\n    );\n  }\n}\n\nexport default Decoder;"]},"metadata":{},"sourceType":"module"}