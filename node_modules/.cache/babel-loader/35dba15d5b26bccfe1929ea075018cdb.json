{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/Decoder/Decoder.js\";\nimport React, { Component } from 'react';\n\nclass Decoder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nextCallback = () => {\n      this.props.next();\n      this.setState({});\n    };\n\n    this.progressCallback = () => {\n      this.props.duration(this.state.duration, this.state.progress);\n    };\n\n    this.listenForAudio = () => {\n      var audio = document.getElementById(\"audio\");\n\n      if (audio) {\n        this.setState({\n          duration: audio.duration\n        });\n        this.setState({\n          progress: this.state.progress + 1\n        });\n        this.progressCallback();\n      } else {\n        this.setState({\n          duration: 0\n        });\n        this.setState({\n          progress: 0\n        });\n      }\n    };\n\n    this.state = {\n      // serverURL: 'https://frozen-thicket-30265.herokuapp.com/downloadmp3?url=',\n      serverURL: 'http://localhost:8000/downloadmp3?url=',\n      interval: 1000,\n      duration: 0,\n      progress: 0\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.listenForAudio();\n    }, this.state.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Media_Player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, this.props.videoId && /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"audio\",\n      src: this.state.serverURL + this.props.videoId,\n      onEnded: this.nextCallback,\n      controls: true,\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }\n    }));\n  }\n\n}\n\nexport default Decoder;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/Decoder/Decoder.js"],"names":["React","Component","Decoder","constructor","props","nextCallback","next","setState","progressCallback","duration","state","progress","listenForAudio","audio","document","getElementById","serverURL","interval","componentDidMount","setInterval","render","videoId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,YAjBmB,GAiBJ,MAAM;AACnB,WAAKD,KAAL,CAAWE,IAAX;AACA,WAAKC,QAAL,CAAc,EAAd;AACD,KApBkB;;AAAA,SAsBnBC,gBAtBmB,GAsBA,MAAM;AACvB,WAAKJ,KAAL,CAAWK,QAAX,CAAoB,KAAKC,KAAL,CAAWD,QAA/B,EAAyC,KAAKC,KAAL,CAAWC,QAApD;AACD,KAxBkB;;AAAA,SA0BnBC,cA1BmB,GA0BF,MAAK;AACpB,UAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;;AACA,UAAGF,KAAH,EAAS;AACP,aAAKN,QAAL,CAAc;AAACE,UAAAA,QAAQ,EAAEI,KAAK,CAACJ;AAAjB,SAAd;AACA,aAAKF,QAAL,CAAc;AAACI,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,GAAsB;AAAjC,SAAd;AACA,aAAKH,gBAAL;AACD,OAJD,MAIK;AACH,aAAKD,QAAL,CAAc;AAACE,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACA,aAAKF,QAAL,CAAc;AAACI,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACD;AAEF,KArCkB;;AAEjB,SAAKD,KAAL,GAAa;AACX;AACAM,MAAAA,SAAS,EAAE,wCAFA;AAGXC,MAAAA,QAAQ,EAAE,IAHC;AAIXR,MAAAA,QAAQ,EAAE,CAJC;AAKXE,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKP,cAAL;AACD,KAFU,EAER,KAAKF,KAAL,CAAWO,QAFH,CAAX;AAGD;;AAwBDG,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhB,KAAL,CAAWiB,OAAX,iBAAsB;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,GAAG,EAAE,KAAKX,KAAL,CAAWM,SAAX,GAAuB,KAAKZ,KAAL,CAAWiB,OAAzD;AAAkE,MAAA,OAAO,EAAE,KAAKhB,YAAhF;AAA8F,MAAA,QAAQ,MAAtG;AAAuG,MAAA,QAAQ,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzB,CADF;AAKD;;AAhD6B;;AAmDhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Decoder extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // serverURL: 'https://frozen-thicket-30265.herokuapp.com/downloadmp3?url=',\n      serverURL: 'http://localhost:8000/downloadmp3?url=',\n      interval: 1000,\n      duration: 0,\n      progress: 0,\n    }\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.listenForAudio()\n    }, this.state.interval);\n  }\n\n  nextCallback = () => {\n    this.props.next()\n    this.setState({})\n  }\n\n  progressCallback = () => {\n    this.props.duration(this.state.duration, this.state.progress)\n  }\n\n  listenForAudio = () =>{\n    var audio = document.getElementById(\"audio\")\n    if(audio){\n      this.setState({duration: audio.duration})\n      this.setState({progress: this.state.progress + 1})\n      this.progressCallback()\n    }else{\n      this.setState({duration: 0})\n      this.setState({progress: 0})\n    }\n\n  }\n\n  render() {\n\n    return (\n      <div className=\"Media_Player\">\n        {this.props.videoId && <audio id=\"audio\" src={this.state.serverURL + this.props.videoId} onEnded={this.nextCallback} controls autoPlay />}\n      </div>\n    );\n  }\n}\n\nexport default Decoder;"]},"metadata":{},"sourceType":"module"}