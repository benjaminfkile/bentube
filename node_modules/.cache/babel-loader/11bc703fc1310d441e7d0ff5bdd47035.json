{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/MediaPlayer/MediaPlayer.js\";\nimport React, { Component } from 'react';\nimport Decoder from '../Decoder/Decoder';\nimport '../MediaPlayer/MediaPlayer.css';\n\nclass MediaPlayer extends Component {\n  constructor() {\n    super();\n\n    this.playClicked = (id, idx) => {\n      this.setState({\n        nowPlaying: id,\n        idx: idx\n      });\n    };\n\n    this.playByIndex = args => {\n      this.setState({\n        nowPlaying: args.id\n      });\n    };\n\n    this.pause = () => {\n      this.setState({\n        nowPlaying: null\n      });\n    };\n\n    this.next = () => {\n      if (this.state.idx < this.state.queu.length - 1) {\n        this.setState({\n          idx: this.state.idx + 1\n        });\n        this.playByIndex(this.state.queu[this.state.idx + 1]);\n      }\n    };\n\n    this.previous = () => {\n      if (this.state.idx > 0) {\n        this.setState({\n          idx: this.state.idx - 1\n        });\n        this.playByIndex(this.state.queu[this.state.idx - 1]);\n      }\n    };\n\n    this.listen4DB = () => {\n      if (this.props.response) {\n        this.setState({\n          waiting4DB: false\n        });\n        this.stopListening4DB();\n      }\n    };\n\n    this.stopListening4DB = () => {\n      clearInterval(this.state.interval1);\n      this.buildQueu();\n    };\n\n    this.duration = () => {\n      if (this.state.nowPlaying) {\n        var audio = document.getElementById(\"audio\");\n\n        if (audio.readyState > 0) {\n          // var minutes = parseInt(audio.duration / 60, 10);\n          var seconds = parseInt(audio.duration);\n          this.setState({\n            trackDuration: seconds\n          });\n        }\n      }\n    };\n\n    this.timer = () => {\n      this.setState();\n    };\n\n    this.buildQueu = () => {\n      let temp = [];\n\n      if (this.props.response) {\n        for (let i = 0; i < this.props.response.items.length; i++) {\n          if (this.props.response.items[i].id.videoId) {\n            temp.push({\n              title: this.props.response.items[i].snippet.title,\n              description: this.props.response.items[i].snippet.description,\n              thumbnails: this.props.response.items[i].snippet.thumbnails,\n              id: this.props.response.items[i].id.videoId,\n              idx: i,\n              playing: false\n            });\n          }\n        }\n\n        this.setState({\n          queu: temp\n        });\n      }\n    };\n\n    this.state = {\n      nowPlaying: null,\n      queu: null,\n      waiting4DB: true,\n      interval1: '',\n      interval2: '',\n      idx: 0,\n      pause: false,\n      trackDuration: null,\n      timer: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      interval1: setInterval(this.listen4DB, 1000)\n    });\n    this.setState({\n      interval2: setInterval(this.duration, 1000)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Decoder, {\n      videoId: this.state.nowPlaying,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }), this.props.response && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Result_List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.previous(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, \"<\"), !this.state.nowPlaying && /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.playClicked(this.state.queu[this.state.idx].id, this.state.idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 60\n      }\n    }, \"play\"), this.state.nowPlaying && /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.pause(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 59\n      }\n    }, \"pause\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.next(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, \">\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, this.state.queu && this.state.queu.map(videos => /*#__PURE__*/React.createElement(\"li\", {\n      key: Math.random() * Math.random(),\n      onClick: () => this.playClicked(videos.id, videos.idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 83\n      }\n    }, videos.title))))));\n  }\n\n}\n\nexport default MediaPlayer;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/MediaPlayer/MediaPlayer.js"],"names":["React","Component","Decoder","MediaPlayer","constructor","playClicked","id","idx","setState","nowPlaying","playByIndex","args","pause","next","state","queu","length","previous","listen4DB","props","response","waiting4DB","stopListening4DB","clearInterval","interval1","buildQueu","duration","audio","document","getElementById","readyState","seconds","parseInt","trackDuration","timer","temp","i","items","videoId","push","title","snippet","description","thumbnails","playing","interval2","componentDidMount","setInterval","render","map","videos","Math","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Decoder from '../Decoder/Decoder';\nimport '../MediaPlayer/MediaPlayer.css'\n\nclass MediaPlayer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            nowPlaying: null,\n            queu: null,\n            waiting4DB: true,\n            interval1: '',\n            interval2: '',\n            idx: 0,\n            pause: false,\n            trackDuration: null,\n            timer: 0\n\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ interval1: setInterval(this.listen4DB, 1000) })\n        this.setState({ interval2: setInterval(this.duration, 1000) })\n    }\n\n    playClicked = (id, idx) => {\n        this.setState({ nowPlaying: id, idx: idx })\n    }\n\n    playByIndex = (args) => {\n        this.setState({ nowPlaying: args.id })\n    }\n\n    pause = () => {\n        this.setState({ nowPlaying: null })\n    }\n\n    next = () => {\n        if (this.state.idx < this.state.queu.length - 1) {\n            this.setState({ idx: this.state.idx + 1 })\n            this.playByIndex(this.state.queu[this.state.idx + 1])\n        }\n    }\n\n    previous = () => {\n        if (this.state.idx > 0) {\n            this.setState({ idx: this.state.idx - 1 })\n            this.playByIndex(this.state.queu[this.state.idx - 1])\n        }\n    }\n\n    listen4DB = () => {\n        if (this.props.response) {\n            this.setState({ waiting4DB: false })\n            this.stopListening4DB()\n        }\n    }\n\n    stopListening4DB = () => {\n        clearInterval(this.state.interval1);\n        this.buildQueu()\n    }\n\n    duration = () => {\n        if (this.state.nowPlaying) {\n          var audio = document.getElementById(\"audio\");\n          if (audio.readyState > 0) {\n            // var minutes = parseInt(audio.duration / 60, 10);\n            var seconds = parseInt(audio.duration);\n            this.setState({trackDuration: seconds})\n          }\n        }\n      }\n    timer = () => {\n        this.setState()\n    }\n\n    buildQueu = () => {\n\n        let temp = []\n        if (this.props.response) {\n            for (let i = 0; i < this.props.response.items.length; i++) {\n                if (this.props.response.items[i].id.videoId) {\n                    temp.push(\n                        {\n                            title: this.props.response.items[i].snippet.title,\n                            description: this.props.response.items[i].snippet.description,\n                            thumbnails: this.props.response.items[i].snippet.thumbnails,\n                            id: this.props.response.items[i].id.videoId,\n                            idx: i,\n                            playing: false,\n                        })\n                }\n            }\n            this.setState({ queu: temp })\n        }\n    }\n\n    render() {\n\n            return (\n                <div className=\"Results\">\n                    <Decoder\n                        videoId={this.state.nowPlaying}\n                    />\n                    {this.props.response && <div className=\"Result_List\">\n                        <div className=\"Controls\">\n                            <ul>\n                                <li onClick={() => this.previous()}>\n                                    &lt;\n                            </li>\n                                {!this.state.nowPlaying && <li onClick={() => this.playClicked(this.state.queu[this.state.idx].id, this.state.idx)}>\n                                    play\n                            </li>}\n                                {this.state.nowPlaying && <li onClick={() => this.pause()}>\n                                    pause\n                            </li>}\n                                <li onClick={() => this.next()}>\n                                    &gt;\n                            </li>\n                            </ul>\n                        </div>\n                        <div className=\"List\">\n                            <ul>\n                                {this.state.queu && this.state.queu.map(videos => <li key={Math.random() * Math.random()} onClick={() => this.playClicked(videos.id, videos.idx)}>{videos.title}</li>)}\n                            </ul>\n                        </div>\n                    </div>}\n                </div>\n            )\n        }\n\n    }\n\n    export default MediaPlayer"]},"metadata":{},"sourceType":"module"}