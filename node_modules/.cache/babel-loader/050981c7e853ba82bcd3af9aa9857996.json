{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/MediaPlayer/MediaPlayer.js\";\nimport React, { Component } from 'react';\nimport Decoder from '../Decoder/Decoder';\nimport '../MediaPlayer/MediaPlayer.css';\n\nclass MediaPlayer extends Component {\n  constructor() {\n    super();\n\n    this.playClicked = id => {\n      this.setState({\n        nowPlaying: id\n      });\n    };\n\n    this.playByIndex = args => {// console.log(args)\n    };\n\n    this.pause = args => {\n      // console.log(args)\n      this.setState({\n        nowPlaying: null\n      });\n    };\n\n    this.next = () => {\n      if (this.state.idx < this.state.queu.length) {\n        this.setState({\n          idx: this.state.idx + 1\n        });\n        this.playByIndex(this.state.queu[this.state.idx].id, this.state.queu[this.state.idx].i);\n      }\n    };\n\n    this.previous = () => {\n      if (this.state.idx > 0) {\n        this.setState({\n          idx: this.state.idx - 1\n        });\n      }\n    };\n\n    this.listen4DB = () => {\n      if (this.props.response) {\n        this.setState({\n          waiting4DB: false\n        });\n        this.stopListening4DB();\n      }\n    };\n\n    this.stopListening4DB = () => {\n      clearInterval(this.state.interval);\n      this.buildQueu();\n    };\n\n    this.buildQueu = () => {\n      let temp = [];\n\n      if (this.props.response) {\n        for (let i = 0; i < this.props.response.items.length; i++) {\n          if (this.props.response.items[i].id.videoId) {\n            temp.push({\n              title: this.props.response.items[i].snippet.title,\n              description: this.props.response.items[i].snippet.description,\n              thumbnails: this.props.response.items[i].snippet.thumbnails,\n              id: this.props.response.items[i].id.videoId,\n              idx: i,\n              playing: false\n            });\n          }\n        }\n\n        this.setState({\n          queu: temp\n        });\n      }\n    };\n\n    this.state = {\n      nowPlaying: null,\n      queu: null,\n      waiting4DB: true,\n      interval: '',\n      idx: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      interval: setInterval(this.listen4DB, 1000)\n    });\n  }\n\n  render() {\n    console.log(this.state.idx);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Decoder, {\n      videoId: this.state.nowPlaying,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), this.props.response && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Result_List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.playByIndex('play'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \">\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.pause('pause'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, \"||\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.previous('previous'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, \"<\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.next('next'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, \">\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, this.state.queu && this.state.queu.map(videos => /*#__PURE__*/React.createElement(\"li\", {\n      key: Math.random() * Math.random(),\n      onClick: () => this.playClicked(videos.id, videos.idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 79\n      }\n    }, videos.title))))));\n  }\n\n}\n\nexport default MediaPlayer;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/MediaPlayer/MediaPlayer.js"],"names":["React","Component","Decoder","MediaPlayer","constructor","playClicked","id","setState","nowPlaying","playByIndex","args","pause","next","state","idx","queu","length","i","previous","listen4DB","props","response","waiting4DB","stopListening4DB","clearInterval","interval","buildQueu","temp","items","videoId","push","title","snippet","description","thumbnails","playing","componentDidMount","setInterval","render","console","log","map","videos","Math","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Decoder from '../Decoder/Decoder';\nimport '../MediaPlayer/MediaPlayer.css'\n\nclass MediaPlayer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            nowPlaying: null,\n            queu: null,\n            waiting4DB: true,\n            interval: '',\n            idx: 0,\n\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ interval: setInterval(this.listen4DB, 1000) })\n    }\n\n    playClicked = (id) => {\n        this.setState({ nowPlaying: id })\n    }\n\n    playByIndex = (args) => {\n        // console.log(args)\n    }\n\n    pause = (args) => {\n        // console.log(args)\n        this.setState({ nowPlaying: null })\n    }\n\n    next = () => {\n        if (this.state.idx < this.state.queu.length) {\n            this.setState({ idx: this.state.idx + 1 })\n            this.playByIndex(this.state.queu[this.state.idx].id, this.state.queu[this.state.idx].i)\n        }\n    }\n\n    previous = () => {\n        if (this.state.idx > 0) {\n            this.setState({ idx: this.state.idx - 1 })\n        }\n    }\n\n    listen4DB = () => {\n        if (this.props.response) {\n            this.setState({ waiting4DB: false })\n            this.stopListening4DB()\n        }\n    }\n\n    stopListening4DB = () => {\n        clearInterval(this.state.interval);\n        this.buildQueu()\n    }\n\n    buildQueu = () => {\n\n        let temp = []\n        if (this.props.response) {\n            for (let i = 0; i < this.props.response.items.length; i++) {\n                if (this.props.response.items[i].id.videoId) {\n                    temp.push(\n                        {\n                            title: this.props.response.items[i].snippet.title,\n                            description: this.props.response.items[i].snippet.description,\n                            thumbnails: this.props.response.items[i].snippet.thumbnails,\n                            id: this.props.response.items[i].id.videoId,\n                            idx: i,\n                            playing: false,\n                        })\n                }\n            }\n            this.setState({queu: temp})\n        }\n\n    }\n\n    render() {\n\n        console.log(this.state.idx)\n\n        return (\n            <div className=\"Results\">\n                <Decoder\n                    videoId={this.state.nowPlaying}\n                />\n                {this.props.response && <div className=\"Result_List\">\n                    <div className=\"Controls\">\n                        <ul>\n                            <li onClick={() => this.playByIndex('play')}>\n                                >\n                            </li>\n                            <li onClick={() => this.pause('pause')}>\n                                ||\n                            </li>\n                            <li onClick={() => this.previous('previous')}>\n                                &lt;\n                            </li>\n                            <li onClick={() => this.next('next')}>\n                                &gt;\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"List\">\n                        <ul>\n                            {this.state.queu && this.state.queu.map(videos => <li key={Math.random() * Math.random()} onClick={() => this.playClicked(videos.id, videos.idx)}>{videos.title}</li>)}\n                        </ul>\n                    </div>\n                </div>}\n            </div>\n        )\n    }\n\n}\n\nexport default MediaPlayer"]},"metadata":{},"sourceType":"module"}