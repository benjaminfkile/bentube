{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/Decoder/Decoder.js\";\nimport React, { Component } from 'react';\n\nclass Decoder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDuration = () => {\n      if (this.state) {}\n\n      let sounds = document.getElementsByTagName('audio')[0];\n      sounds.addEventListener('playing', function () {\n        console.log('playing');\n      }, true);\n    };\n\n    this.state = {\n      // serverURL: 'https://frozen-thicket-30265.herokuapp.com/downloadmp3?url=',\n      serverURL: 'http://localhost:8000/downloadmp3?url=',\n      videoId: this.props.videoId\n    };\n  }\n\n  componentWillUpdate() {\n    this.getDuration();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Media_Player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, this.props.videoId && /*#__PURE__*/React.createElement(\"audio\", {\n      src: this.state.serverURL + this.props.videoId,\n      controls: true,\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }\n    }));\n  }\n\n}\n\nexport default Decoder;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/Decoder/Decoder.js"],"names":["React","Component","Decoder","constructor","props","getDuration","state","sounds","document","getElementsByTagName","addEventListener","console","log","serverURL","videoId","componentWillUpdate","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,WAbmB,GAaL,MAAM;AAClB,UAAG,KAAKC,KAAR,EAAc,CAEb;;AACD,UAAIC,MAAM,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuC,CAAvC,CAAb;AACAF,MAAAA,MAAM,CAACG,gBAAP,CAAwB,SAAxB,EAAmC,YAAY;AAC7CC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OAFD,EAEG,IAFH;AAGD,KArBkB;;AAEjB,SAAKN,KAAL,GAAa;AACX;AACAO,MAAAA,SAAS,EAAE,wCAFA;AAGXC,MAAAA,OAAO,EAAE,KAAKV,KAAL,CAAWU;AAHT,KAAb;AAKD;;AAEDC,EAAAA,mBAAmB,GAAE;AACnB,SAAKV,WAAL;AACD;;AAaDW,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWU,OAAX,iBAAsB;AAAO,MAAA,GAAG,EAAE,KAAKR,KAAL,CAAWO,SAAX,GAAuB,KAAKT,KAAL,CAAWU,OAA9C;AAAuD,MAAA,QAAQ,MAA/D;AAAgE,MAAA,QAAQ,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzB,CADF;AAKD;;AAjC6B;;AAoChC,eAAeZ,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Decoder extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // serverURL: 'https://frozen-thicket-30265.herokuapp.com/downloadmp3?url=',\n      serverURL: 'http://localhost:8000/downloadmp3?url=',\n      videoId: this.props.videoId,\n    }\n  }\n\n  componentWillUpdate(){\n    this.getDuration()\n  }\n\n  getDuration = () => {\n    if(this.state){\n\n    }\n    let sounds = document.getElementsByTagName('audio')[0];\n    sounds.addEventListener('playing', function () {\n      console.log('playing')\n    }, true);\n  }\n\n\n  render() {   \n\n    return (\n      <div className=\"Media_Player\">\n        {this.props.videoId && <audio src={this.state.serverURL + this.props.videoId} controls autoPlay />}\n      </div>\n    );\n  }\n}\n\nexport default Decoder;"]},"metadata":{},"sourceType":"module"}