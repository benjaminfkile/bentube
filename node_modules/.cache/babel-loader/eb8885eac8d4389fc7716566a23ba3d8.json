{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/MediaPlayer/MediaPlayer.js\";\nimport React, { Component } from 'react';\nimport Decoder from '../Decoder/Decoder';\nimport '../MediaPlayer/MediaPlayer.css';\n\nclass MediaPlayer extends Component {\n  constructor() {\n    super();\n\n    this.playTrack = id => {\n      this.setState({\n        nowPlaying: id\n      });\n    };\n\n    this.pause = () => {\n      this.setState({\n        nowPlaying: null\n      });\n    };\n\n    this.next = () => {\n      this.setState({\n        idx: this.state.idx + 1\n      });\n      console.log(this.state.idx);\n      this.playTrack(this.state.queu[this.state.ix]);\n    };\n\n    this.previous = () => {};\n\n    this.listen4DB = () => {\n      if (this.props.response) {\n        this.setState({\n          waiting4DB: false\n        });\n        this.stopListening4DB();\n      }\n    };\n\n    this.stopListening4DB = () => {\n      clearInterval(this.state.interval1);\n      this.buildQueu();\n    };\n\n    this.buildQueu = () => {\n      let temp = [];\n\n      if (this.props.response) {\n        for (let i = 0; i < this.props.response.items.length; i++) {\n          if (this.props.response.items[i].id.videoId) {\n            temp.push({\n              title: this.props.response.items[i].snippet.title,\n              description: this.props.response.items[i].snippet.description,\n              thumbnails: this.props.response.items[i].snippet.thumbnails,\n              id: this.props.response.items[i].id.videoId,\n              idx: i,\n              playing: false\n            });\n          }\n        }\n\n        this.setState({\n          queu: temp\n        });\n      }\n    };\n\n    this.state = {\n      nowPlaying: null,\n      queu: null,\n      waiting4DB: true,\n      interval1: '',\n      idx: 0,\n      pause: false,\n      trackDuration: '',\n      timer: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      interval1: setInterval(this.listen4DB, 1000)\n    });\n  }\n\n  render() {\n    // console.log(this.state.queu)\n    // console.log(this.state.queu)\n    // if (this.state.queu) {\n    //     for (let i = 0; i < this.state.queu.length; i++) {\n    //         console.log(this.state.queu[i].title)\n    //         console.log(this.state.queu[i].description)\n    //     }\n    // }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Result_List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, this.state.queu && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.previous(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, \"<\"), !this.state.nowPlaying && /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.playTrack(this.state.queu[this.state.idx].id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, \"play\"), this.state.nowPlaying && /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.pause(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, \"pause\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.next(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, \">\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, this.state.queu && this.state.queu.map(videos => /*#__PURE__*/React.createElement(\"li\", {\n      key: Math.random() * Math.random(),\n      onClick: () => this.playTrack(videos.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, videos.title))))), /*#__PURE__*/React.createElement(Decoder, {\n      videoId: this.state.nowPlaying,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default MediaPlayer;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/MediaPlayer/MediaPlayer.js"],"names":["React","Component","Decoder","MediaPlayer","constructor","playTrack","id","setState","nowPlaying","pause","next","idx","state","console","log","queu","ix","previous","listen4DB","props","response","waiting4DB","stopListening4DB","clearInterval","interval1","buildQueu","temp","i","items","length","videoId","push","title","snippet","description","thumbnails","playing","trackDuration","timer","componentDidMount","setInterval","render","map","videos","Math","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Decoder from '../Decoder/Decoder';\nimport '../MediaPlayer/MediaPlayer.css'\n\nclass MediaPlayer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            nowPlaying: null,\n            queu: null,\n            waiting4DB: true,\n            interval1: '',\n            idx: 0,\n            pause: false,\n            trackDuration: '',\n            timer: 0\n\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ interval1: setInterval(this.listen4DB, 1000) })\n    }\n\n    playTrack = (id) => {\n        this.setState({ nowPlaying: id })\n    }\n\n    pause = () => {\n        this.setState({ nowPlaying: null })\n    }\n\n    next = () => {\n        this.setState({idx: this.state.idx + 1})\n        console.log(this.state.idx)\n        this.playTrack(this.state.queu[this.state.ix])\n    }\n\n    previous = () => {\n\n    }\n\n    listen4DB = () => {\n        if (this.props.response) {\n            this.setState({ waiting4DB: false })\n            this.stopListening4DB()\n        }\n    }\n\n    stopListening4DB = () => {\n        clearInterval(this.state.interval1);\n        this.buildQueu()\n    }\n\n\n    buildQueu = () => {\n        let temp = []\n        if (this.props.response) {\n            for (let i = 0; i < this.props.response.items.length; i++) {\n                if (this.props.response.items[i].id.videoId) {\n                    temp.push(\n                        {\n                            title: this.props.response.items[i].snippet.title,\n                            description: this.props.response.items[i].snippet.description,\n                            thumbnails: this.props.response.items[i].snippet.thumbnails,\n                            id: this.props.response.items[i].id.videoId,\n                            idx: i,\n                            playing: false,\n                        })\n                }\n            }\n            this.setState({ queu: temp })\n        }\n    }\n\n    render() {\n\n        // console.log(this.state.queu)\n        // console.log(this.state.queu)\n\n        // if (this.state.queu) {\n        //     for (let i = 0; i < this.state.queu.length; i++) {\n        //         console.log(this.state.queu[i].title)\n        //         console.log(this.state.queu[i].description)\n\n        //     }\n        // }\n\n\n        return (\n            <div className=\"Results\">\n\n                <div className=\"Result_List\">\n                    {this.state.queu && <div className=\"Controls\">\n                        {/* <section>\n                            <h1>\n                                {this.state.queu[this.state.idx].title}\n                            </h1>\n                            <br>\n                            </br>\n                            <p>\n                                {this.state.queu[this.state.idx].description}\n                            </p>\n                        </section> */}\n                        <br>\n                        </br>\n                        <ul>\n                            <li onClick={() => this.previous()}>\n                                &lt;\n                                    </li>\n                            {!this.state.nowPlaying &&\n                                <li onClick={() => this.playTrack(this.state.queu[this.state.idx].id)}>\n                                    play\n                                    </li>}\n                            {this.state.nowPlaying &&\n                                <li onClick={() => this.pause()}>\n                                    pause\n                                    </li>}\n                            <li onClick={() => this.next()}>\n                                &gt;\n                                    </li>\n                        </ul>\n                    </div>}\n                    <br></br>\n                    <div className=\"List\">\n                        <ul>\n                            {this.state.queu && this.state.queu.map(videos =>\n                                <li key={Math.random() * Math.random()} onClick={() => this.playTrack(videos.id)}>{videos.title}\n                                </li>)}\n                        </ul>\n                    </div>\n                </div>\n                <Decoder\n                    videoId={this.state.nowPlaying}\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default MediaPlayer"]},"metadata":{},"sourceType":"module"}