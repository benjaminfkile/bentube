{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/Search/Search.js\";\nimport React, { Component } from 'react';\nimport MediaPlayer from '../MediaPlayer/MediaPlayer';\nimport DummyStore from './DummyStore';\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = () => {\n      this.getVideos(this.state.value, this.state.maxResults);\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.formatQueryParams = params => {\n      const queryItems = Object.keys(params).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`);\n      return queryItems.join('&');\n    };\n\n    this.getVideos = (query, maxResults) => {\n      const params = {\n        key: this.state.apiKey,\n        q: query,\n        part: 'snippet',\n        maxResults\n      };\n      const queryString = this.formatQueryParams(params);\n      const url = this.state.searchURL + '?' + queryString;\n      fetch(url).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error(response.statusText);\n      }).then(responseJson => this.setState({\n        response: responseJson\n      })).catch(err => {\n        console.log(err.message);\n      });\n    };\n\n    this.state = {\n      apiKey: 'AIzaSyCyDGjcu0UgCCIWV1ZRB2Tv-i3M9i1iaa0',\n      searchURL: 'https://www.googleapis.com/youtube/v3/search',\n      baseURL: 'https://www.youtube.com/watch?v=',\n      response: null,\n      value: '',\n      maxResults: 100\n    };\n    this.handleChange = this.handleChange.bind(this);\n  } // componentDidMount() {\n  //     this.getVideos('cat', 10)\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"search\")), /*#__PURE__*/React.createElement(MediaPlayer, {\n      key: Math.random(),\n      response: this.state.response // response={DummyStore}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/Search/Search.js"],"names":["React","Component","MediaPlayer","DummyStore","Search","constructor","handleSubmit","getVideos","state","value","maxResults","handleChange","event","preventDefault","setState","target","formatQueryParams","params","queryItems","Object","keys","map","key","encodeURIComponent","join","query","apiKey","q","part","queryString","url","searchURL","fetch","then","response","ok","json","Error","statusText","responseJson","catch","err","console","log","message","baseURL","bind","render","Math","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MediaPlayer from '../MediaPlayer/MediaPlayer'\nimport DummyStore from './DummyStore'\n\n\nclass Search extends Component {\n    constructor() {\n        super();\n        this.state = {\n            apiKey: 'AIzaSyCyDGjcu0UgCCIWV1ZRB2Tv-i3M9i1iaa0',\n            searchURL: 'https://www.googleapis.com/youtube/v3/search',\n            baseURL: 'https://www.youtube.com/watch?v=',\n            response: null,\n            value: '',\n            maxResults: 100,\n        }\n        this.handleChange = this.handleChange.bind(this)\n\n    }\n\n\n    // componentDidMount() {\n    //     this.getVideos('cat', 10)\n    // }\n\n    handleSubmit = () => {\n        this.getVideos(this.state.value, this.state.maxResults)\n    }\n\n    handleChange = (event) => {\n        event.preventDefault()\n        this.setState({ value: event.target.value })\n    }\n\n    formatQueryParams = (params) => {\n        const queryItems = Object.keys(params)\n            .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n        return queryItems.join('&')\n    }\n\n\n    getVideos = (query, maxResults) => {\n        const params = {\n            key: this.state.apiKey,\n            q: query,\n            part: 'snippet',\n            maxResults\n        };\n        const queryString = this.formatQueryParams(params)\n        const url = this.state.searchURL + '?' + queryString;\n\n        fetch(url)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                throw new Error(response.statusText);\n            })\n            .then(responseJson => this.setState({ response: responseJson }))\n            .catch(err => {\n                console.log(err.message)\n            });\n    }\n\n    render() {\n\n\n        return (\n            <div className=\"Search\">\n\n                <form>\n                    <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    <li onClick={() => this.handleSubmit()}>search</li>\n                </form>\n\n                <MediaPlayer key={Math.random()}\n                    response={this.state.response}\n                // response={DummyStore}\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}