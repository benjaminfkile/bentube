{"ast":null,"code":"var _jsxFileName = \"/home/ben/Desktop/hackify/src/MediaPlayer/MediaPlayer.js\";\nimport React, { Component } from 'react';\nimport Decoder from '../Decoder/Decoder';\nimport '../MediaPlayer/MediaPlayer.css';\n\nclass MediaPlayer extends Component {\n  constructor() {\n    super();\n\n    this.playVideo = (id, idx) => {\n      this.setState({\n        nowPlaying: id\n      }); // console.log(idx)\n    };\n\n    this.play = args => {// console.log(args)\n    };\n\n    this.pause = args => {\n      // console.log(args)\n      this.setState({\n        nowPlaying: null\n      });\n    };\n\n    this.next = () => {\n      if (this.state.idx < this.props.response.items.length - 1) {\n        this.setState({\n          idx: this.state.idx + 1\n        });\n        console.log(this.state.idx);\n      }\n    };\n\n    this.previous = () => {\n      if (this.state.idx > 0) {\n        this.setState({\n          idx: this.state.idx - 1\n        });\n        console.log(this.state.idx);\n      }\n    };\n\n    this.state = {\n      nowPlaying: null,\n      idx: 0\n    };\n  }\n\n  render() {\n    let temp = [];\n\n    if (this.props.response) {\n      for (let i = 0; i < this.props.response.items.length; i++) {\n        if (this.props.response.items[i].id.videoId) {\n          temp.push({\n            title: this.props.response.items[i].snippet.title,\n            description: this.props.response.items[i].snippet.description,\n            thumbnails: this.props.response.items[i].snippet.thumbnails,\n            id: this.props.response.items[i].id.videoId,\n            idx: i\n          });\n        }\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Decoder, {\n      videoId: this.state.nowPlaying,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), this.props.response && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Result_List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.play('play'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \">\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.pause('pause'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"||\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.previous('previous'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, \"<\"), /*#__PURE__*/React.createElement(\"li\", {\n      onClick: () => this.next('next'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, \">\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"List\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, temp.map(videos => /*#__PURE__*/React.createElement(\"li\", {\n      key: Math.random() * Math.random(),\n      onClick: () => this.playVideo(videos.id, videos.idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 49\n      }\n    }, videos.title))))));\n  }\n\n}\n\nexport default MediaPlayer;","map":{"version":3,"sources":["/home/ben/Desktop/hackify/src/MediaPlayer/MediaPlayer.js"],"names":["React","Component","Decoder","MediaPlayer","constructor","playVideo","id","idx","setState","nowPlaying","play","args","pause","next","state","props","response","items","length","console","log","previous","render","temp","i","videoId","push","title","snippet","description","thumbnails","map","videos","Math","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Decoder from '../Decoder/Decoder';\nimport '../MediaPlayer/MediaPlayer.css'\n\nclass MediaPlayer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            nowPlaying: null,\n            idx: 0,\n\n        }\n    }\n\n    playVideo = (id, idx) => {\n        this.setState({ nowPlaying: id })\n        // console.log(idx)\n    }\n\n    play = (args) => {\n        // console.log(args)\n    }\n\n    pause = (args) => {\n        // console.log(args)\n        this.setState({ nowPlaying: null })\n    }\n\n    next = () => {\n        if (this.state.idx < this.props.response.items.length - 1) {\n            this.setState({ idx: this.state.idx + 1 })\n            console.log(this.state.idx)\n        }\n    }\n\n    previous = () => {\n        if (this.state.idx > 0) {\n            this.setState({ idx: this.state.idx - 1 })\n            console.log(this.state.idx)\n        }\n    }\n    render() {\n\n\n        let temp = []\n        if (this.props.response) {\n            for (let i = 0; i < this.props.response.items.length; i++) {\n                if (this.props.response.items[i].id.videoId) {\n                    temp.push(\n                        {\n                            title: this.props.response.items[i].snippet.title,\n                            description: this.props.response.items[i].snippet.description,\n                            thumbnails: this.props.response.items[i].snippet.thumbnails,\n                            id: this.props.response.items[i].id.videoId,\n                            idx: i\n                        })\n                }\n            }\n        }\n\n\n\n        return (\n            <div className=\"Results\">\n                <Decoder\n                    videoId={this.state.nowPlaying}\n                />\n                {this.props.response && <div className=\"Result_List\">\n                    <div className=\"Controls\">\n                        <ul>\n                            <li onClick={() => this.play('play')}>\n                                >\n                            </li>\n                            <li onClick={() => this.pause('pause')}>\n                                ||\n                            </li>\n                            <li onClick={() => this.previous('previous')}>\n                                &lt;\n                            </li>\n                            <li onClick={() => this.next('next')}>\n                                &gt;\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"List\">\n                        <ul>\n                            {temp.map(videos => <li key={Math.random() * Math.random()} onClick={() => this.playVideo(videos.id, videos.idx)}>{videos.title}</li>)}\n                        </ul>\n                    </div>\n                </div>}\n            </div>\n        )\n    }\n\n}\n\nexport default MediaPlayer"]},"metadata":{},"sourceType":"module"}